services:
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    labels:
      - "traefik.enable=true"
      # for /prometheus
      - "traefik.http.routers.cadvisor.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/cadvisor`)"
      - "traefik.http.routers.cadvisor.entrypoints=websecure"
      - "traefik.http.routers.cadvisor.tls=true"
      - "traefik.http.routers.cadvisor.middlewares=cadvisor-strip-prefix@file,global-middleware@file"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 8080 || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 15s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=/prometheus'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    labels:
      - "traefik.enable=true"
      # for /prometheus
      - "traefik.http.routers.prometheus.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/prometheus`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.middlewares=global-middleware@file"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - cadvisor
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 9090 || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 15s

  loki:
    image: grafana/loki:latest
    container_name: loki
    volumes:
      - ./loki/loki-config.yml:/etc/loki/config.yml
    ports:
      - 3100:3100
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 3100 || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 15s

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command:
      - '-config.file=/etc/promtail/config.yml'
    ports:
      - 9080:9080
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - loki
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep promtail | grep -v grep || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 15s

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      # for /grafana
      - "traefik.http.routers.grafana.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/grafana`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.middlewares=global-middleware@file"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    environment:
      - GF_SERVER_ROOT_URL=http://grafana:3000/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - prometheus
      - cadvisor
      - loki
      - promtail
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 3000 || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 15s

networks:
  app-network:
    external: true

volumes:
  prometheus_data:
  grafana_data:

